config {
    type: "table",
    schema: "reporting",
    description: "Lista dos países",
    tags: ['1-general'],
    columns: {
        order_id: "Id único do pedido",
        order_id2: "Id único do pedido",
        payment: {
          columns: {
            method: "Método de pagamento"
          }
        }
    }
}
 
SELECT
  *,

-------------------------- Itens do pedido -----------------------
-- Faz um join com prod_cat_order, conta as quantidades e cria um array com os pedidos
  (
    SELECT COUNT(*)
    FROM ${ref("stand_"+dataform.projectConfig.vars.ecommPlatName+"_prod_cat_order")} prod_cat_order
    WHERE prod_cat_order.order_id = O.order_id
  ) AS quantity_variety_items,

  (
    SELECT SUM(prod_cat_order.quantity)
    FROM ${ref("stand_"+dataform.projectConfig.vars.ecommPlatName+"_prod_cat_order")} prod_cat_order
    WHERE prod_cat_order.order_id = O.order_id
  ) AS quantity_items,

 ARRAY(
    SELECT AS STRUCT
      prod_cat_order.*
    FROM ${ref("stand_"+dataform.projectConfig.vars.ecommPlatName+"_prod_cat_order")} prod_cat_order
    WHERE prod_cat_order.order_id = O.order_id
 ) AS items,


-------------  customer_stats -------------  
  STRUCT 
  (
    MIN (creation_date) OVER (PARTITION BY customer.customer_id) AS first_order_date,
    LAG (creation_date) OVER (PARTITION BY customer.customer_id ORDER BY creation_date) AS previous_order_date,
    ROW_NUMBER() OVER (PARTITION BY customer.customer_id ORDER BY creation_date) - 1 AS number_of_previous_orders,
    CASE
      WHEN ROW_NUMBER() OVER (PARTITION BY customer.customer_id ORDER BY creation_date) - 1 = 0 THEN "Novo"
      ELSE "Recompra"
    END AS new_repurchase
  ) 
  AS customer_stats

FROM
  ${ref("stand_"+dataform.projectConfig.vars.ecommPlatName+"_orders")} O
